---
name: "CI: Build"

on:
  push:
    branches:
      - master
      - main
      - develop
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
    paths:
      - "**.js"
      - "package.json"


  pull_request:
    branches:
      - master
      - main
      - develop

  workflow_dispatch:


jobs:
  tests:
    name: Tests
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: true
      # Recommendations:
      #   * support at least 2 operating systems
      #   * support at least 2 compilers
      #   * make sure all supported configurations for your project are built
      #
      # Disable/enable builds in this list to meet the above recommendations
      # and your own projects needs
      matrix:
        os: [windows-latest, windows-2019, ubuntu-latest, ubuntu-20.04]
        node_version: ["lts/*", "current"]
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: "ðŸ§° Checkout"
        uses: actions/checkout@v4
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      - name: "Use Node version ${{matrix.node_version}}"
        uses: actions/setup-node@v4.0.0
        with:
          node-version: "${{matrix.node_version}}"

      - run: npm install
      - run: npm run test
        env:
          CI: true

  lint:
    name: lint
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: "Use Node version ${{matrix.node_version}}"
        uses: actions/setup-node@v4.0.0
        with:
          node-version: "lts/*"

      - run: npm install
      - run: npm run lint

  coverage:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: "Use Node version ${{matrix.node_version}}"
        uses: actions/setup-node@v4.0.0
        with:
          node-version: "lts/*"

      - name: coverage
        run: |
          npm run coverage
          npm run report-coverage
      - uses: codecov/codecov-action@v4

        with:
          file: ./coverage.lcov
          fail_ci_if_error: true

  diagram:
    name: "Build diagram"
    needs: tests
    runs-on: ubuntu-latest

    steps:
      - name: "ðŸ§° Checkout"
        uses: actions/checkout@master

      - name: "Update diagram"
        uses: githubocto/repo-visualizer@0.9.1
        with:
          output_file: "images/diagram.svg"
          excluded_paths: "dist,node_modules"

  releaseNotes:
    # if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: "ðŸ§° Checkout"
        uses: actions/checkout@v4
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      - name: "Build Releasenotes"
        id: github_releasenotes
        uses: release-drafter/release-drafter@v5.25.0
        with:
          publish: "${{ steps.check-version.outputs.tag != '' }}"
          tag: "${{ steps.check-version.outputs.tag }}"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  changeLog:
    # if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: mikepenz/action-gh-release@v0.2.0-a03 #softprops/action-gh-release
        with:
          body: ${{steps.github_release.outputs.changelog}}
